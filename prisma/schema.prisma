// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@unique([provider, providerAccountId])
  @@index([userId], map: "Account_userId_idx")
}
 
model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  @@index([userId], map: "Session_userId_idx")
}
 
model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image    String?
  accounts Account[]
  sessions Session[]
  games    Game[]
}

enum GameType {
  mcq
  open_ended
}

model Game {
  id          String   @id @default(cuid())
  userId      String
  timeStarted   DateTime
  timeEnded     DateTime?
  topic       String
  gameType    GameType
  user        User @relation(fields: [userId], references: [id], onDelete: Cascade)
  questions    Question[]

  @@index([userId], map: "Game_userId_idx")
}

model Question {
  id         String   @id @default(cuid())
  question   String
  answer     String
  gameId     String
  options    Json? // for mcqs
  isCorrect  Boolean? // for mcqs
  percentageCorrect Float? // for open ended questions
  questionType GameType
  game       Game @relation(fields: [gameId], references: [id], onDelete: Cascade)

  @@index([gameId], map: "Question_gameId_idx")
}